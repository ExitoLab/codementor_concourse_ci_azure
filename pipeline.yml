resources:
- name: source-code
  type: git
  source:
    uri: https://github.com/ExitoLab/codementor_concourse_ci_azure.git
    branch: main

# Where we will push the image
- name: my-docker-image
  type: docker-image
  source:
    repository: ((image-repo-name))
    tag: v1
    username: ((registry-username))
    password: ((registry-password))

jobs:
- name: build-and-publish-image
  public: true
  plan:
  - get: source-code
  - put: my-docker-image
    params:
      build: code-repo

  # - task: build
  #   privileged: true
  #   config:
  #     platform: linux
  #     image_resource:
  #       type: registry-image
  #       source:
  #         repository: concourse/oci-build-task
  #     inputs:
  #     - name: source-code
  #       path: .
  #     outputs:
  #     - name: image
  #     params:
  #       CONTEXT: .
  #     run:
  #       path: build



  # - get: concourse-docs-git
  #   trigger: true
  #   params:
  #     depth: 1
  #     submodules: none
  #     submodules_depth: 0
  #     clean_tags: true
  #     clean_submodules: true
  #     tag_filter: ''
  #     paths:
  #       - .
  #     disable_lfs: true
  #     target: /tmp
  # - task: build-docker-image
  #   config:
  #     platform: linux
  #     image_resource:
  #       type: docker-image
  #       source: {repository: docker}
  #     inputs:
  #     - name: source-code
  #     run:
  #       path: source-code/build.sh


  # - task: build-docker-image
  #   config:
  #     platform: linux
  #     image_resource:
  #       type: docker-image
  #       source:
  #         repository: your-docker-repo/image-name
  #         tag: latest  # or specify the appropriate tag
  #     inputs:
  #     - name: source-code
  #     run:
  #       path: /bin/sh
  #       args:
  #         - -exc
  #         - |
  #           cd source-code
  #           ./build.sh  # Adjust the path and name of the script as needed



  # - task: sign-docker-image
  #   config:
  #     platform: linux
  #     image_resource:
  #       type: docker-image
  #       source: {repository: docker}
  #     inputs:
  #     - name: source-code
  #     params:
  #       SIGNING_KEY_URI: ((SIGNING_KEY_URI))
  #       SIGNING_CERT_URI: ((SIGNING_CERT_URI))
  #     run:
  #       path: source-code/sign.sh


